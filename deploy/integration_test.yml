---
- hosts: localhost
  tags: [install-csi]
  vars:
    ssh_key_files: "{{ lookup('fileglob', '~/.ssh/id*.pub', wantlist=True) }}"
    ssh_keys: "{{ [lookup('file', ssh_key_files[0])] }}"
    base_server_name: 'test-kubernetes-'
    servers:
      - "master"
      - "node1"
      - "node2"
    cloudscale_api_token: "{{ lookup('env','CLOUDSCALE_TOKEN') }}"

  tasks:
    - debug:
        msg: "Starting servers with keys found in ~/.ssh/id*.pub': {{ ssh_keys }}"

    - name: Start the cloudscale.ch servers
      cloudscale_server:
        name: "{{ base_server_name }}{{ item }}"
        flavor: flex-4
        image: centos-7
        ssh_keys: '{{ ssh_keys }}'
        api_token: '{{ cloudscale_api_token }}'
      loop: "{{ servers }}"
      register: created_servers

    - name: Waiting for servers to come up
      pause:
        seconds: 30
    
    - name: Register master in inventory
      add_host:
        name: '{{ created_servers.results[0].interfaces[0].addresses[0].address }}'
        groups:
          - kube-master
          - etcd
        ansible_user: 'root'

    - name: Register nodes in inventory
      add_host:
        name: '{{ item.interfaces[0].addresses[0].address }}'
        groups:
          - kube-node
        ansible_user: 'root'
      loop: ["{{ created_servers.results[1] }}", "{{ created_servers.results[2] }}"]

# this is not needed for the plugin or the integration tests to work, but helps if you want
# to take a closer look at the LUKS volumes with SSH on a node
- hosts: k8s-cluster
  tags: [install-cryptsetup]
  tasks:
    - name: "Install cryptsetup on nodes"
      yum:
        name: cryptsetup

- name: Include the play that installs kubernetes
  tags: [install-kubernetes]
  import_playbook: kubespray/cluster.yml

- hosts: kube-master
  vars:
    cloudscale_api_token: "{{ lookup('env','CLOUDSCALE_TOKEN') }}"
    secret_file: 'secret.yml'
    config_file: 'csi-config.yml'
  tags: [install-csi]
  tasks:
    - name: Create secrets in cluster
      template:
        src: templates/secret.yml.j2
        dest: "{{ secret_file }}"

    - name: Delete secret if it exists from a previous run
      shell: "kubectl -n kube-system delete secret cloudscale || true"

    - name: Create secrets in cluster
      shell: "kubectl create -f {{ secret_file }}"

    - name: Store show secrets
      shell: kubectl -n kube-system get secrets
      register: secret_output

    - name: Stored secrets in kubernetes
      debug:
        msg: "{{ secret_output.stdout_lines }}"

    - name: Copy default cloudscale-csi config to kubernetes
      copy:
        src: kubernetes/releases/csi-cloudscale-dev.yaml
        dest: "{{ config_file }}"

    - name: Apply default cloudscale-csi config to kubernetes
      shell: "kubectl apply -f {{ config_file }}"

    - name: Copy kubernetes config to localhost
      fetch:
        src: /root/.kube/config
        dest: "kubeconfig.yml"
        flat: true


- hosts: localhost
  tags: [test]
  tasks:
    - name: "Run the tests"
      shell: "GOCACHE=off KUBECONFIG=$(pwd)/kubeconfig.yml go test -v -tags integration ../test/..."

- hosts: localhost
  tags: [cleanup]
  vars:
    base_server_name: 'test-kubernetes-'
    servers:
      - "master"
      - "node1"
      - "node2"
    cloudscale_api_token: "{{ lookup('env','CLOUDSCALE_TOKEN') }}"

  tasks:
    - name: Delete the cloudscale.ch servers
      cloudscale_server:
        name: "{{ base_server_name }}{{ item }}"
        api_token: '{{ cloudscale_api_token }}'
        state: absent
      loop: "{{ servers }}"
